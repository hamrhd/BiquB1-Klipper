[gcode_macro TOGGLE_CASELIGHT]
gcode:
  SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  # BIQU B1 Start G-code
  NEOPIXEL_DISPLAY LED="hotend_led" TYPE=extruder_temp MODE=glow
  M117 Bed Heating!
  M140 S{BED_TEMP}; Set Heat Bed temperature
  M117 Extruder Heating!
  M190 S{BED_TEMP}; Wait for Heat Bed temperature
  M104 S{EXTRUDER_TEMP}; Set Extruder temperature
  G92 E0; Reset Extruder
  M117 Homing axes
  _CHOME ;Home all axes if not homed
  _CZTILT ;Z Tilt if not done
  # M117 Load Mesh Profile
  # BED_MESH_PROFILE LOAD=default
  M117 Adaptive Mesh
  BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1 ADAPTIVE_MARGIN=5
  G1 Z2.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X1 Y1 Z0.3 F5000.0; Move to home
  M117 Purging
  M109 S{EXTRUDER_TEMP}; Wait for Extruder temperature
  LINE_PURGE
  # G1 X4.1 Y20 Z0.3 F5000.0; Move to start position
  # G1 X4.1 Y200.0 Z0.3 F1500.0 E15; Draw the first line
  # G1 X4.4 Y200.0 Z0.3 F5000.0; Move to side a little
  # G1 X4.4 Y20 Z0.3 F1500.0 E30; Draw the second line
  G92 E0; Reset Extruder
  M117 Lets make
  G1 Z2.0 F3000; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0; Move over to prevent blob squish
  M117
  SET_LED LED="hotend_led" RED=1.0 GREEN=1.0 BLUE=1.0 SYNC=0 TRANSMIT=1

[gcode_macro END_PRINT]
gcode:
  {% set BED_MAX = params.BED_MAX|default(235)|int %}
  ;BIQU B1 Default End Gcode
  G91 ;Relative positioning
  G1 E-2 F2700;Retract a bit
  G1 E-2 Z0.2 F2400;Retract a bit more and raise Z
  G1 X5 Y5 F3000;Wipe out
  G1 Z10;Raise Z by 10mm
  G90 ;Return to absolute positioning
  G1 X0 Y{BED_MAX};
  M106 S0;Turn-off fan
  M104 S0;Turn-off hotend
  M140 S0;Turn-off bed
  M84 X Y E;Disable all steppers but Z

[gcode_macro _CHOME]
gcode:
  ; {% if printer["gcode_macro status_homing"] != null %}
  ;  status_homing
  ; {% endif %}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  ; {% if printer["gcode_macro status_ready"] != null %}
  ;   status_ready
  ; {% endif %}

[gcode_macro _CZTILT]
gcode:
  ; {% if printer["gcode_macro status_leveling"] != null %}
  ;   status_leveling
  ; {% endif %}
    {% if printer.z_tilt.applied == False %}
        Z_TILT_ADJUST
    {% endif %}
  ; {% if printer["gcode_macro status_ready"] != null %}
  ;   status_ready
  ; {% endif %}

[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            TOGGLE_CASELIGHT
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro ACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60

[gcode_macro DEACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=0

[delayed_gcode POWER_OFF_PRINTER_CHECK_ACT]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
  {% else %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60
  {% endif %}
  
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(200) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    #M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(200) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    #M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=unload_state

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

#[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-400 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro _SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}
